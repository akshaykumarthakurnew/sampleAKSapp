name: DockerApp
on: workflow_dispatch

jobs:
  build:

    runs-on: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v3
    - name: image creation
      run: |
        docker-compose up -d
        docker images
    - name: Login to ACR
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      run: |
        SP_APPID=$(echo $AZURE_CREDENTIALS | jq -e -r 'select(.clientId != null) | .clientId')
        SP_PASSWORD=$(echo $AZURE_CREDENTIALS | jq -e -r 'select(.clientSecret != null) | .clientSecret')
        docker login -u $SP_APPID -p $SP_PASSWORD akshaytestpoc.azurecr.io
      shell: bash

    ## push image to registry
    - name: Tag and push spring-batch image
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      run: |
        echo -e "\e[34m[Tag and push spring-batch image]"
        docker tag mcr.microsoft.com/azuredocs/azure-vote-front:v1 akshaytestpoc.azurecr.io/azure-vote-front:v1
        docker push akshaytestpoc.azurecr.io/azure-vote-front:v1
        docker tag tiangolo/uwsgi-nginx-flask:python3.6    akshaytestpoc.azurecr.io/nginx-flask:python3.6
        docker push akshaytestpoc.azurecr.io/nginx-flask:python3.6
        docker tag mcr.microsoft.com/oss/bitnami/redis:6.0.8  akshaytestpoc.azurecr.io/redis:6.0.8
        docker push akshaytestpoc.azurecr.io/redis:6.0.8
      shell: bash
      
    - name: Deploy to AKS
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      run: |
        echo -e "\e[34m[Tag and push spring-batch image]"
        az aks install-cli
        az account set --subscription 68781233-909c-4196-a987-91a7f7f997be
        az aks get-credentials --resource-group ak-dev-nl1 --name aks-cluster
        kubectl get nodes
        kubectl apply -f azure-vote-all-in-one-redis.yaml
      shell: bash
      
